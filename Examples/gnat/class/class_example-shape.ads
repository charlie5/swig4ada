-- This file is generated by SWIG. Do *not* modify by hand.
with interfaces.c;
with interfaces.C;
package class_example.Shape is


type Item is  abstract tagged limited
      record
         x : aliased interfaces.c.Double;
         y : aliased interfaces.c.Double;
      end record;



   type View is access all class_example.Shape.Item'Class ;





   nshapes : aliased interfaces.c.Int;

   procedure destruct (Self : in out class_example.Shape.Item);

   procedure move (Self : in out class_example.Shape.Item;
dx :  interfaces.c.Double;
dy :  interfaces.c.Double);

   function  area (Self : in class_example.Shape.Item) return interfaces.c.Double is abstract;

   function  perimeter (Self : in class_example.Shape.Item) return interfaces.c.Double is abstract;





private



   pragma cpp_Class (Entity => Item);






   pragma import (CPP, nshapes, "_ZN5Shape7nshapesE");
   pragma cpp_Destructor (Entity => destruct);

   pragma Import (CPP, destruct, "_ZN5ShapeD1Ev");
   pragma Import (CPP, move, "Ada_Shape_move");
   pragma Import (CPP, area);
   pragma Import (CPP, perimeter);

end class_example.Shape;
