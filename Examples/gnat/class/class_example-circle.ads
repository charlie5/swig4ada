-- This file is generated by SWIG. Do *not* modify by hand.
with interfaces.c;
with interfaces.C;
with class_example.Shape;
package class_example.Circle is


type Item is new Shape.item with
      record
         radius : aliased interfaces.c.Double;
      end record;



   type Items is array (interfaces.C.Size_t range <>) of aliased class_example.Circle.Item;

   type View is access all class_example.Circle.Item'Class ;






   function  construct  return class_example.Circle.Item'class;

   procedure destruct (Self : in out class_example.Circle.Item);

   function  area (Self : in class_example.Circle.Item) return interfaces.c.Double;

   function  perimeter (Self : in class_example.Circle.Item) return interfaces.c.Double;





private



   pragma cpp_Class (Entity => Item);








   pragma cpp_Constructor (Entity => construct);

   pragma Import (CPP, construct, "gnat_new_Circle");
   pragma cpp_Destructor (Entity => destruct);

   pragma Import (CPP, destruct, "_ZN6CircleD1Ev");
   pragma Import (CPP, area, "Ada_Circle_area");
   pragma Import (CPP, perimeter, "Ada_Circle_perimeter");

end class_example.Circle;
