--
-- This file was automatically generated by SWIG version 1.3.29 (http://www.swig.org).
--
-- Do not make changes to this file. Modify the SWIG interface file instead.
--


with ada.unchecked_Deallocation;
with swigg_c_import; use swigg_c_import;


package body Wrapper is


   procedure free (Self : in out View)
   is
      procedure deallocate is new ada.unchecked_Deallocation (Item'Class, View);
   begin
      deallocate (Self);
   end;



   procedure define (Self       :    out Item;
                     cPtr       : in     system.Address;
                     cMemoryOwn : in     Boolean)
   is
   begin
      self.swigCPtr_Wrapper := cPtr;
      set_swigCMemOwn (self, cMemoryOwn);
   end;



   function defined (cPtr       : in     system.Address;
                     cMemoryOwn : in     Boolean := true) return Item'class
   is
      the_Item : Item := (ada.finalization.Controlled with
                            swigCPtr_Wrapper => system.null_Address,
                            swigCMemOwn         => cMemoryOwn,
                            construction_Depth  => 4,
                            reference_Count     => null);
   begin
      define (the_Item, cPtr, cMemoryOwn);
      add_Reference (the_Item);
      return the_Item;
   end;






   procedure adjust  (Self : in out Item)
   is
   begin
      set_construction_Depth (Self, get_construction_Depth (Self) - 1);
      add_Reference (Self);
   end;



   function new_Wrapper (cPtr       : in     system.Address) return Item'class
   is
   begin
      return defined (cPtr, true);
   end;



   function getCPtr (Self : in Item) return system.Address
   is
   begin
      return self.swigCPtr_Wrapper;
   end;





   procedure set_swigCMemOwn (Self :    out Item;
                              Now  : in     Boolean)
   is
   begin
      self.swigCMemOwn := Now;
   end;


   function  get_swigCMemOwn (Self : in     Item) return Boolean
   is
   begin
      return self.swigCMemOwn;
   end;




   procedure set_construction_Depth (Self :    out Item;
                                     Now  : in     Integer)
   is
   begin
      self.construction_Depth := Now;
   end;


   function  get_construction_Depth (Self : in     Item) return Integer
   is
   begin
      return self.construction_Depth;
   end;




   procedure add_Reference (Self : in out Item)
   is
   begin
      if self.reference_Count = null then
         self.reference_Count := new Natural'(0);
      end if;

      self.reference_Count.all := self.reference_Count.all + 1;
   end;


   procedure rid_Reference (Self : in out Item)
   is
   begin
      if self.reference_Count /= null then
         self.reference_Count.all := self.reference_Count.all - 1;
      end if;
   end;


   procedure destroy_reference_Count (Self : in out Item)
   is
      procedure free is new ada.unchecked_Deallocation (Natural, Natural_view);
   begin
      free (self.reference_Count);
   end;


   function  get_reference_Count (Self : in     Item) return Natural
   is
   begin
      return self.reference_Count.all;
   exception
      when constraint_Error => return 0;
   end;



   procedure finalize (Self : in out Item)
   is
   begin
      rid_Reference (Self);

      dispose (Self);
   end;



   procedure dispose (Self : in out Item)
   is
      use type system.Address;
   begin
      if          self.swigCPtr_Wrapper /= system.null_Address
         and then get_swigCMemOwn (Self)
         and then get_reference_Count (Self) = 0
      then
         set_swigCMemOwn (Self, false);
         swigg_c_import.delete_Wrapper (self.swigCPtr_Wrapper);
         destroy_reference_Count (Self);
      end if;

      self.swigCPtr_Wrapper := system.null_Address;

   end dispose;



   function null_Wrapper return Item'class
   is
      the_Item : Item := (ada.finalization.Controlled with
                            swigCPtr_Wrapper => system.null_Address,
                            swigCMemOwn         => false,
                            construction_Depth  => 0,
                            reference_Count     => null);
   begin
      define (the_Item, system.null_Address, false);
      return the_Item;
   end;



   function is_Null (Self : in Item) return Boolean
   is
      use type system.Address;
   begin
      return self.swigCPtr_Wrapper = system.null_Address;
   end;



   procedure is_Construct (Self : in out Item)
   is
   begin
      set_construction_Depth (Self,  2);
   end;





   procedure set_localh (Self : in Item;
                          localh : in swig_p_DOH.item'Class) 
   is
   begin
      
      swigg_c_import
      .set_Wrapper_localh(self.swigCPtr_Wrapper,
 standard.system.Address (getCPtr (localh)));
   end set_localh;


   function get_localh (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
      .get_Wrapper_localh(self.swigCPtr_Wrapper), false);
   end get_localh;


   procedure set_def (Self : in Item;
                          def : in swig_p_DOH.item'Class) 
   is
   begin
      
      swigg_c_import
      .set_Wrapper_def(self.swigCPtr_Wrapper,
 standard.system.Address (getCPtr (def)));
   end set_def;


   function get_def (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
      .get_Wrapper_def(self.swigCPtr_Wrapper), false);
   end get_def;


   procedure set_locals (Self : in Item;
                          locals : in swig_p_DOH.item'Class) 
   is
   begin
      
      swigg_c_import
      .set_Wrapper_locals(self.swigCPtr_Wrapper,
 standard.system.Address (getCPtr (locals)));
   end set_locals;


   function get_locals (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
      .get_Wrapper_locals(self.swigCPtr_Wrapper), false);
   end get_locals;


   procedure set_code (Self : in Item;
                          code : in swig_p_DOH.item'Class) 
   is
   begin
      
      swigg_c_import
      .set_Wrapper_code(self.swigCPtr_Wrapper,
 standard.system.Address (getCPtr (code)));
   end set_code;


   function get_code (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
      .get_Wrapper_code(self.swigCPtr_Wrapper), false);
   end get_code;


   procedure initialize (Self : in out Item) 
   is
   begin
      
      null;
   end initialize;


   function construct return Wrapper.item'Class
   is
      Self : Item := (ada.finalization.Controlled with
                        swigCPtr_Wrapper => system.null_Address,
                        swigCMemOwn        => true,
                        construction_Depth =>    2,
                        reference_Count    =>    null);
   begin
      

      add_Reference (Self);
      define (Self,
             swigg_c_import.new_Wrapper ,
              true);

      return Self;
   end construct;



   procedure dummy_procedure is begin null; end;

end Wrapper;