--
--  This file was automatically generated by SWIG version 1.3.29 (http://www.swig.org).
--
--  Do not make changes to this file. Modify the SWIG interface file instead.
--


with swigg_c_import; use swigg_c_import;
with Ada.Unchecked_Deallocation;
--  with interfaces.c;

package body Language is


   procedure free (Self : in out View)
   is
      procedure deallocate is new ada.unchecked_Deallocation (Item'Class, View);
   begin
      deallocate (Self);
   end free;



   overriding procedure define (Self       :    out Item;
                                cPtr       : in     system.Address;
                                cMemoryOwn : in     Boolean)
   is
   begin
      Dispatcher.define (Dispatcher.item (Self), swigg_c_import.LanguageUpcast (cPtr), cMemoryOwn);
      self.swigCPtr_Language := cPtr;
      set_swigCMemOwn (self, cMemoryOwn);
   end define;



   function defined (cPtr       : in     system.Address;
                     cMemoryOwn : in     Boolean := True) return Item'class
   is
      the_Item : Item := (Dispatcher.item with
                            swigCPtr_Language => system.null_Address);
   begin
      set_construction_Depth (the_Item, 4);
      define (the_Item, cPtr, cMemoryOwn);
      add_Reference (the_Item);
      return the_Item;
   end defined;






   overriding procedure adjust  (Self : in out Item)
   is
   begin
      set_construction_Depth (Self, get_construction_Depth (Self) - 1);
      add_Reference (Self);
   end adjust;



   function new_Language (cPtr       : in     system.Address) return Item'class
   is
   begin
      return defined (cPtr, True);
   end new_Language;



   overriding function getCPtr (Self : in Item) return system.Address
   is
   begin
      return self.swigCPtr_Language;
   end getCPtr;



   overriding procedure finalize (Self : in out Item)
   is
   begin
      rid_Reference (Self);

      dispose (Self);
   end finalize;



   overriding procedure dispose (Self : in out Item)
   is
      use type system.Address;
   begin
      if          self.swigCPtr_Language /= system.null_Address
        and then get_swigCMemOwn (Self)
        and then get_reference_Count (Self) = 0
      then
         set_swigCMemOwn (Self, False);
         swigg_c_import.delete_Language (self.swigCPtr_Language);
         destroy_reference_Count (Self);
      end if;

      self.swigCPtr_Language := system.null_Address;

      Dispatcher.dispose (Dispatcher.item (Self));
   end dispose;



   function null_Language return Item'class
   is
      the_Item : Item := (Dispatcher.item with
                            swigCPtr_Language => system.null_Address);
   begin
      set_construction_Depth (the_Item, 0);
      define (the_Item, system.null_Address, False);
      return the_Item;
   end null_Language;



   overriding function is_Null (Self : in Item) return Boolean
   is
      use type system.Address;
   begin
      return self.swigCPtr_Language = system.null_Address;
   end is_Null;



   overriding procedure is_Construct (Self : in out Item)
   is
   begin
      set_construction_Depth (Self,  2);
   end is_Construct;





   overriding procedure initialize (Self : in out Item)
   is
   begin

      null;
   end initialize;


   function construct return Language.item'Class
   is
      Self : Item := (Dispatcher.item with
                        swigCPtr_Language => system.null_Address);
   begin


      set_construction_Depth (Self, 2);

      add_Reference (Self);
      define (Self,
              swigg_c_import.new_Language,
              True);

      return Self;
   end construct;


   overriding function emit_one (Self : access Item;
                                 n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_emit_one (self.swigCPtr_Language,
                        getCPtr (n)));

   end emit_one;


   procedure main (Self : in out Item;
                   argc : in Integer;
                   argv : in swig_p_p_char.item'Class)
   is
   begin

      swigg_c_import
        .Language_main (self.swigCPtr_Language,
                        Standard.interfaces.c.Int (argc),
                        getCPtr (argv));
   end main;


   overriding function top (Self : access Item;
                            n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_top (self.swigCPtr_Language,
                        getCPtr (n)));

   end top;


   overriding function applyDirective (Self : access Item;
                                       n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_applyDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end applyDirective;


   overriding function clearDirective (Self : access Item;
                                       n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_clearDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end clearDirective;


   overriding function constantDirective (Self : access Item;
                                          n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_constantDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end constantDirective;


   overriding function extendDirective (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_extendDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end extendDirective;


   overriding function fragmentDirective (Self : access Item;
                                          n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_fragmentDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end fragmentDirective;


   overriding function importDirective (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_importDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end importDirective;


   overriding function includeDirective (Self : access Item;
                                         n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_includeDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end includeDirective;


   overriding function insertDirective (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_insertDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end insertDirective;


   overriding function moduleDirective (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_moduleDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end moduleDirective;


   overriding function nativeDirective (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_nativeDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end nativeDirective;


   overriding function pragmaDirective (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_pragmaDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end pragmaDirective;


   overriding function typemapDirective (Self : access Item;
                                         n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_typemapDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end typemapDirective;


   overriding function typemapcopyDirective (Self : access Item;
                                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_typemapcopyDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end typemapcopyDirective;


   overriding function typesDirective (Self : access Item;
                                       n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_typesDirective (self.swigCPtr_Language,
                        getCPtr (n)));

   end typesDirective;


   overriding function cDeclaration (Self : access Item;
                                     n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_cDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end cDeclaration;


   overriding function externDeclaration (Self : access Item;
                                          n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_externDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end externDeclaration;


   overriding function enumDeclaration (Self : access Item;
                                        n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_enumDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end enumDeclaration;


   overriding function enumvalueDeclaration (Self : access Item;
                                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_enumvalueDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end enumvalueDeclaration;


   overriding function enumforwardDeclaration (Self : access Item;
                                               n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_enumforwardDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end enumforwardDeclaration;


   overriding function classDeclaration (Self : access Item;
                                         n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDeclaration;


   overriding function classforwardDeclaration (Self : access Item;
                                                n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classforwardDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end classforwardDeclaration;


   overriding function constructorDeclaration (Self : access Item;
                                               n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_constructorDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end constructorDeclaration;


   overriding function destructorDeclaration (Self : access Item;
                                              n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_destructorDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end destructorDeclaration;


   overriding function accessDeclaration (Self : access Item;
                                          n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_accessDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end accessDeclaration;


   overriding function namespaceDeclaration (Self : access Item;
                                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_namespaceDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end namespaceDeclaration;


   overriding function usingDeclaration (Self : access Item;
                                         n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_usingDeclaration (self.swigCPtr_Language,
                        getCPtr (n)));

   end usingDeclaration;


   function functionHandler (Self : access Item;
                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_functionHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end functionHandler;


   function globalfunctionHandler (Self : access Item;
                                   n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_globalfunctionHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end globalfunctionHandler;


   function memberfunctionHandler (Self : access Item;
                                   n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_memberfunctionHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end memberfunctionHandler;


   function staticmemberfunctionHandler (Self : access Item;
                                         n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_staticmemberfunctionHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end staticmemberfunctionHandler;


   function callbackfunctionHandler (Self : access Item;
                                     n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_callbackfunctionHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end callbackfunctionHandler;


   function variableHandler (Self : access Item;
                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_variableHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end variableHandler;


   function globalvariableHandler (Self : access Item;
                                   n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_globalvariableHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end globalvariableHandler;


   function membervariableHandler (Self : access Item;
                                   n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_membervariableHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end membervariableHandler;


   function staticmembervariableHandler (Self : access Item;
                                         n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_staticmembervariableHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end staticmembervariableHandler;


   function memberconstantHandler (Self : access Item;
                                   n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_memberconstantHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end memberconstantHandler;


   function constructorHandler (Self : access Item;
                                n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_constructorHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end constructorHandler;


   function copyconstructorHandler (Self : access Item;
                                    n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_copyconstructorHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end copyconstructorHandler;


   function destructorHandler (Self : access Item;
                               n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_destructorHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end destructorHandler;


   function classHandler (Self : access Item;
                          n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end classHandler;


   function typedefHandler (Self : access Item;
                            n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_typedefHandler (self.swigCPtr_Language,
                        getCPtr (n)));

   end typedefHandler;


   function constantWrapper (Self : access Item;
                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_constantWrapper (self.swigCPtr_Language,
                        getCPtr (n)));

   end constantWrapper;


   function variableWrapper (Self : access Item;
                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_variableWrapper (self.swigCPtr_Language,
                        getCPtr (n)));

   end variableWrapper;


   function functionWrapper (Self : access Item;
                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_functionWrapper (self.swigCPtr_Language,
                        getCPtr (n)));

   end functionWrapper;


   function nativeWrapper (Self : access Item;
                           n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_nativeWrapper (self.swigCPtr_Language,
                        getCPtr (n)));

   end nativeWrapper;


   function classDirector (Self : access Item;
                           n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirector (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirector;


   function classDirectorInit (Self : access Item;
                               n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorInit (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorInit;


   function classDirectorEnd (Self : access Item;
                              n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorEnd (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorEnd;


   function unrollVirtualMethods (Self : access Item;
                                  n : in swig_p_DOH.item'Class;
                                  parent : in swig_p_DOH.item'Class;
                                  vm : in swig_p_DOH.item'Class;
                                  default_director : in Integer;
                                  virtual_destructor : in swig_p_int.item'Class;
                                  protectedbase : in Integer) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_unrollVirtualMethods_SWIG_0 (self.swigCPtr_Language,
                        getCPtr (n),
                        getCPtr (parent),
                        getCPtr (vm),
                        Standard.interfaces.c.Int (default_director),
                        getCPtr (virtual_destructor),
                        Standard.interfaces.c.Int (protectedbase)));

   end unrollVirtualMethods;


   function unrollVirtualMethods (Self : access Item;
                                  n : in swig_p_DOH.item'Class;
                                  parent : in swig_p_DOH.item'Class;
                                  vm : in swig_p_DOH.item'Class;
                                  default_director : in Integer;
                                  virtual_destructor : in swig_p_int.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_unrollVirtualMethods_SWIG_1 (self.swigCPtr_Language,
                        getCPtr (n),
                        getCPtr (parent),
                        getCPtr (vm),
                        Standard.interfaces.c.Int (default_director),
                        getCPtr (virtual_destructor)));

   end unrollVirtualMethods;


   function classDirectorConstructor (Self : access Item;
                                      n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorConstructor (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorConstructor;


   function classDirectorDefaultConstructor (Self : access Item;
                                             n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorDefaultConstructor (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorDefaultConstructor;


   function classDirectorMethod (Self : access Item;
                                 n : in swig_p_DOH.item'Class;
                                 parent : in swig_p_DOH.item'Class;
                                 super : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorMethod (self.swigCPtr_Language,
                        getCPtr (n),
                        getCPtr (parent),
                        getCPtr (super)));

   end classDirectorMethod;


   function classDirectorConstructors (Self : access Item;
                                       n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorConstructors (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorConstructors;


   function classDirectorDestructor (Self : access Item;
                                     n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorDestructor (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorDestructor;


   function classDirectorMethods (Self : access Item;
                                  n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorMethods (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorMethods;


   function classDirectorDisown (Self : access Item;
                                 n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_classDirectorDisown (self.swigCPtr_Language,
                        getCPtr (n)));

   end classDirectorDisown;


   function validIdentifier (Self : access Item;
                             s : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_validIdentifier (self.swigCPtr_Language,
                        getCPtr (s)));

   end validIdentifier;


   function addSymbol (Self : access Item;
                       s : in swig_p_DOH.item'Class;
                       n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_addSymbol (self.swigCPtr_Language,
                        getCPtr (s),
                        getCPtr (n)));

   end addSymbol;


   function symbolLookup (Self : access Item;
                          s : in swig_p_DOH.item'Class) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_symbolLookup (self.swigCPtr_Language,
                                   getCPtr (s));
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end symbolLookup;


   function classLookup (Self : access Item;
                         s : in swig_p_DOH.item'Class) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_classLookup (self.swigCPtr_Language,
                                  getCPtr (s));
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end classLookup;


   function enumLookup (Self : access Item;
                        s : in swig_p_DOH.item'Class) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_enumLookup (self.swigCPtr_Language,
                                 getCPtr (s));
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end enumLookup;


   function abstractClassTest (Self : access Item;
                               n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_abstractClassTest (self.swigCPtr_Language,
                        getCPtr (n)));

   end abstractClassTest;


   function is_assignable (Self : access Item;
                           n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_is_assignable (self.swigCPtr_Language,
                        getCPtr (n)));

   end is_assignable;


   function runtimeCode (Self : access Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_runtimeCode (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end runtimeCode;


   function defaultExternalRuntimeFilename (Self : access Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_defaultExternalRuntimeFilename (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end defaultExternalRuntimeFilename;


   procedure enable_cplus_runtime_mode (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_enable_cplus_runtime_mode (self.swigCPtr_Language);
   end enable_cplus_runtime_mode;


   function cplus_runtime_mode (Self : in Item) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_cplus_runtime_mode (self.swigCPtr_Language));

   end cplus_runtime_mode;


   procedure allow_protected_and_private_Members (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_allow_protected_and_private_Members (self.swigCPtr_Language);
   end allow_protected_and_private_Members;


   procedure allow_directors (Self : in Item;
                              val : in Integer)
   is
   begin

      swigg_c_import
        .Language_allow_directors_SWIG_0 (self.swigCPtr_Language,
                                          Standard.interfaces.c.Int (val));
   end allow_directors;


   procedure allow_directors (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_allow_directors_SWIG_1 (self.swigCPtr_Language);
   end allow_directors;


   function directorsEnabled (Self : in Item) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_directorsEnabled (self.swigCPtr_Language));

   end directorsEnabled;


   procedure allow_dirprot (Self : in Item;
                            val : in Integer)
   is
   begin

      swigg_c_import
        .Language_allow_dirprot_SWIG_0 (self.swigCPtr_Language,
                                        Standard.interfaces.c.Int (val));
   end allow_dirprot;


   procedure allow_dirprot (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_allow_dirprot_SWIG_1 (self.swigCPtr_Language);
   end allow_dirprot;


   procedure allow_allprotected (Self : in Item;
                                 val : in Integer)
   is
   begin

      swigg_c_import
        .Language_allow_allprotected_SWIG_0 (self.swigCPtr_Language,
                                             Standard.interfaces.c.Int (val));
   end allow_allprotected;


   procedure allow_allprotected (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_allow_allprotected_SWIG_1 (self.swigCPtr_Language);
   end allow_allprotected;


   function dirprot_mode (Self : in Item) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_dirprot_mode (self.swigCPtr_Language));

   end dirprot_mode;


   function need_nonpublic_ctor (Self : in Item;
                                 n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_need_nonpublic_ctor (self.swigCPtr_Language,
                        getCPtr (n)));

   end need_nonpublic_ctor;


   function need_nonpublic_member (Self : in Item;
                                   n : in swig_p_DOH.item'Class) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_need_nonpublic_member (self.swigCPtr_Language,
                        getCPtr (n)));

   end need_nonpublic_member;


   procedure setSubclassInstanceCheck (Self : in Item;
                                       s : in swig_p_DOH.item'Class)
   is
   begin

      swigg_c_import
        .Language_setSubclassInstanceCheck (self.swigCPtr_Language,
                                            getCPtr (s));
   end setSubclassInstanceCheck;


   procedure setOverloadResolutionTemplates (Self : in Item;
                                             argc : in swig_p_DOH.item'Class;
                                             argv : in swig_p_DOH.item'Class)
   is
   begin

      swigg_c_import
        .Language_setOverloadResolutionTemplates (self.swigCPtr_Language,
                                                  getCPtr (argc),
                                                  getCPtr (argv));
   end setOverloadResolutionTemplates;


   procedure allow_multiple_input (Self : in Item;
                                   val : in Integer)
   is
   begin

      swigg_c_import
        .Language_allow_multiple_input_SWIG_0 (self.swigCPtr_Language,
                                               Standard.interfaces.c.Int (val));
   end allow_multiple_input;


   procedure allow_multiple_input (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_allow_multiple_input_SWIG_1 (self.swigCPtr_Language);
   end allow_multiple_input;


   procedure allow_overloading (Self : in Item;
                                val : in Integer)
   is
   begin

      swigg_c_import
        .Language_allow_overloading_SWIG_0 (self.swigCPtr_Language,
                                            Standard.interfaces.c.Int (val));
   end allow_overloading;


   procedure allow_overloading (Self : in Item)
   is
   begin

      swigg_c_import
        .Language_allow_overloading_SWIG_1 (self.swigCPtr_Language);
   end allow_overloading;


   function is_wrapping_class (Self : in Item) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_is_wrapping_class (self.swigCPtr_Language));

   end is_wrapping_class;


   function getCurrentClass (Self : in Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_getCurrentClass (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end getCurrentClass;


   function getClassName (Self : in Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_getClassName (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end getClassName;


   function getClassHash (Self : in Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_getClassHash (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end getClassHash;


   function getClassPrefix (Self : in Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_getClassPrefix (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end getClassPrefix;


   function getClassType (Self : in Item) return swig_p_DOH.item'Class
   is
   begin

      declare
         cPtr       : constant system.Address := swigg_c_import
           .Language_getClassType (self.swigCPtr_Language);
         the_Result : constant swig_p_DOH.item'Class
           := swig_p_DOH
             .defined (cPtr, False);
      begin
         --$add_Reference
         return the_Result;
      end;

   end getClassType;


   function is_smart_pointer (Self : in Item) return Integer
   is
   begin

      return Integer (swigg_c_import
                      .Language_is_smart_pointer (self.swigCPtr_Language));

   end is_smart_pointer;


   function extraDirectorProtectedCPPMethodsRequired (Self : access Item) return Boolean
   is
   begin

      return swigg_c_import
                      .Language_extraDirectorProtectedCPPMethodsRequired (self.swigCPtr_Language);

   end extraDirectorProtectedCPPMethodsRequired;


   procedure set_none_comparison (Self : in Item;
                                  none_comparison : in swig_p_DOH.item'Class)
   is
   begin

      swigg_c_import
        .set_Language_none_comparison (self.swigCPtr_Language,
                                       getCPtr (none_comparison));
   end set_none_comparison;


   function get_none_comparison (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
                                 .get_Language_none_comparison (self.swigCPtr_Language), False);
   end get_none_comparison;


   procedure set_director_ctor_code (Self : in Item;
                                     director_ctor_code : in swig_p_DOH.item'Class)
   is
   begin

      swigg_c_import
        .set_Language_director_ctor_code (self.swigCPtr_Language,
                                          getCPtr (director_ctor_code));
   end set_director_ctor_code;


   function get_director_ctor_code (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
                                 .get_Language_director_ctor_code (self.swigCPtr_Language), False);
   end get_director_ctor_code;


   procedure set_director_prot_ctor_code (Self : in Item;
                                          director_prot_ctor_code : in swig_p_DOH.item'Class)
   is
   begin

      swigg_c_import
        .set_Language_director_prot_ctor_code (self.swigCPtr_Language,
                                               getCPtr (director_prot_ctor_code));
   end set_director_prot_ctor_code;


   function get_director_prot_ctor_code (Self : in Item)  return swig_p_DOH.item'Class
   is
   begin
      return swig_p_DOH.defined (swigg_c_import
                                 .get_Language_director_prot_ctor_code (self.swigCPtr_Language), False);
   end get_director_prot_ctor_code;


   procedure set_director_multiple_inheritance (Self : in Item;
                                                director_multiple_inheritance : in Integer)
   is
   begin

      swigg_c_import
        .set_Language_director_multiple_inheritance (self.swigCPtr_Language,
                                                     Standard.interfaces.c.Int (director_multiple_inheritance));
   end set_director_multiple_inheritance;


   function get_director_multiple_inheritance (Self : in Item)  return Integer
   is
   begin
      return Integer (swigg_c_import
                      .get_Language_director_multiple_inheritance (self.swigCPtr_Language));
   end get_director_multiple_inheritance;


   procedure set_director_language (Self : in Item;
                                    director_language : in Integer)
   is
   begin

      swigg_c_import
        .set_Language_director_language (self.swigCPtr_Language,
                                         Standard.interfaces.c.Int (director_language));
   end set_director_language;


   function get_director_language (Self : in Item)  return Integer
   is
   begin
      return Integer (swigg_c_import
                      .get_Language_director_language (self.swigCPtr_Language));
   end get_director_language;


   --  Director support
   --


   function SwigDirector_Language_defaultExternalRuntimeFilename (Self : access Item'class) return system.Address
   is
   begin
      return swig_p_DOH.getCPtr (defaultExternalRuntimeFilename (Self));
   end SwigDirector_Language_defaultExternalRuntimeFilename;



   function defaultExternalRuntimeFilename_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end defaultExternalRuntimeFilename_is_overridden;


   function SwigDirector_Language_defaultExternalRuntimeFilename_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return defaultExternalRuntimeFilename_is_overridden (Self.all);
   end SwigDirector_Language_defaultExternalRuntimeFilename_is_overridden_dispatch;


   function SwigDirector_Language_addSymbol (Self : access Item'class;   s : system.Address;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (addSymbol (Self, swig_p_DOH.defined (s, False), swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_addSymbol;



   function addSymbol_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end addSymbol_is_overridden;


   function SwigDirector_Language_addSymbol_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return addSymbol_is_overridden (Self.all);
   end SwigDirector_Language_addSymbol_is_overridden_dispatch;


   function SwigDirector_Language_extraDirectorProtectedCPPMethodsRequired (Self : access Item'class) return Boolean
   is
   begin
      return extraDirectorProtectedCPPMethodsRequired (Self);
   end SwigDirector_Language_extraDirectorProtectedCPPMethodsRequired;



   function extraDirectorProtectedCPPMethodsRequired_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end extraDirectorProtectedCPPMethodsRequired_is_overridden;


   function SwigDirector_Language_extraDirectorProtectedCPPMethodsRequired_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return extraDirectorProtectedCPPMethodsRequired_is_overridden (Self.all);
   end SwigDirector_Language_extraDirectorProtectedCPPMethodsRequired_is_overridden_dispatch;


   procedure SwigDirector_Language_main (Self : access Item'class;   argc : interfaces.c.Int;   argv : system.Address)
   is
   begin
      main (Self.all, Integer (argc), swig_p_p_char.defined (argv, False));
   end SwigDirector_Language_main;



   function main_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end main_is_overridden;


   function SwigDirector_Language_main_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return main_is_overridden (Self.all);
   end SwigDirector_Language_main_is_overridden_dispatch;


   function SwigDirector_Language_unrollVirtualMethods_SWIG_1 (Self : access Item'class;   n : system.Address;   parent : system.Address;   vm : system.Address;   default_director : interfaces.c.Int;   virtual_destructor : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (unrollVirtualMethods (Self, swig_p_DOH.defined (n, False), swig_p_DOH.defined (parent, False), swig_p_DOH.defined (vm, False), Integer (default_director), swig_p_int.defined (virtual_destructor, False)));
   end SwigDirector_Language_unrollVirtualMethods_SWIG_1;



   function unrollVirtualMethods_SWIG_1_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end unrollVirtualMethods_SWIG_1_is_overridden;


   function SwigDirector_Language_unrollVirtualMethods_SWIG_1_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return unrollVirtualMethods_SWIG_1_is_overridden (Self.all);
   end SwigDirector_Language_unrollVirtualMethods_SWIG_1_is_overridden_dispatch;


   function SwigDirector_Language_unrollVirtualMethods_SWIG_0 (Self : access Item'class;   n : system.Address;   parent : system.Address;   vm : system.Address;   default_director : interfaces.c.Int;   virtual_destructor : system.Address;   protectedbase : interfaces.c.Int) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (unrollVirtualMethods (Self, swig_p_DOH.defined (n, False), swig_p_DOH.defined (parent, False), swig_p_DOH.defined (vm, False), Integer (default_director), swig_p_int.defined (virtual_destructor, False), Integer (protectedbase)));
   end SwigDirector_Language_unrollVirtualMethods_SWIG_0;



   function unrollVirtualMethods_SWIG_0_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end unrollVirtualMethods_SWIG_0_is_overridden;


   function SwigDirector_Language_unrollVirtualMethods_SWIG_0_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return unrollVirtualMethods_SWIG_0_is_overridden (Self.all);
   end SwigDirector_Language_unrollVirtualMethods_SWIG_0_is_overridden_dispatch;


   function SwigDirector_Language_runtimeCode (Self : access Item'class) return system.Address
   is
   begin
      return swig_p_DOH.getCPtr (runtimeCode (Self));
   end SwigDirector_Language_runtimeCode;



   function runtimeCode_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end runtimeCode_is_overridden;


   function SwigDirector_Language_runtimeCode_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return runtimeCode_is_overridden (Self.all);
   end SwigDirector_Language_runtimeCode_is_overridden_dispatch;


   function SwigDirector_Language_is_assignable (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (is_assignable (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_is_assignable;



   function is_assignable_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end is_assignable_is_overridden;


   function SwigDirector_Language_is_assignable_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return is_assignable_is_overridden (Self.all);
   end SwigDirector_Language_is_assignable_is_overridden_dispatch;


   function SwigDirector_Language_abstractClassTest (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (abstractClassTest (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_abstractClassTest;



   function abstractClassTest_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end abstractClassTest_is_overridden;


   function SwigDirector_Language_abstractClassTest_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return abstractClassTest_is_overridden (Self.all);
   end SwigDirector_Language_abstractClassTest_is_overridden_dispatch;


   function SwigDirector_Language_enumLookup (Self : access Item'class;   s : system.Address) return system.Address
   is
   begin
      return swig_p_DOH.getCPtr (enumLookup (Self, swig_p_DOH.defined (s, False)));
   end SwigDirector_Language_enumLookup;



   function enumLookup_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end enumLookup_is_overridden;


   function SwigDirector_Language_enumLookup_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return enumLookup_is_overridden (Self.all);
   end SwigDirector_Language_enumLookup_is_overridden_dispatch;


   function SwigDirector_Language_classLookup (Self : access Item'class;   s : system.Address) return system.Address
   is
   begin
      return swig_p_DOH.getCPtr (classLookup (Self, swig_p_DOH.defined (s, False)));
   end SwigDirector_Language_classLookup;



   function classLookup_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classLookup_is_overridden;


   function SwigDirector_Language_classLookup_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classLookup_is_overridden (Self.all);
   end SwigDirector_Language_classLookup_is_overridden_dispatch;


   function SwigDirector_Language_symbolLookup (Self : access Item'class;   s : system.Address) return system.Address
   is
   begin
      return swig_p_DOH.getCPtr (symbolLookup (Self, swig_p_DOH.defined (s, False)));
   end SwigDirector_Language_symbolLookup;



   function symbolLookup_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end symbolLookup_is_overridden;


   function SwigDirector_Language_symbolLookup_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return symbolLookup_is_overridden (Self.all);
   end SwigDirector_Language_symbolLookup_is_overridden_dispatch;


   function SwigDirector_Language_validIdentifier (Self : access Item'class;   s : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (validIdentifier (Self, swig_p_DOH.defined (s, False)));
   end SwigDirector_Language_validIdentifier;



   function validIdentifier_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end validIdentifier_is_overridden;


   function SwigDirector_Language_validIdentifier_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return validIdentifier_is_overridden (Self.all);
   end SwigDirector_Language_validIdentifier_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorDisown (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorDisown (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorDisown;



   function classDirectorDisown_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorDisown_is_overridden;


   function SwigDirector_Language_classDirectorDisown_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorDisown_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorDisown_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorMethods (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorMethods (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorMethods;



   function classDirectorMethods_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorMethods_is_overridden;


   function SwigDirector_Language_classDirectorMethods_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorMethods_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorMethods_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorDestructor (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorDestructor (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorDestructor;



   function classDirectorDestructor_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorDestructor_is_overridden;


   function SwigDirector_Language_classDirectorDestructor_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorDestructor_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorDestructor_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorConstructors (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorConstructors (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorConstructors;



   function classDirectorConstructors_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorConstructors_is_overridden;


   function SwigDirector_Language_classDirectorConstructors_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorConstructors_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorConstructors_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorMethod (Self : access Item'class;   n : system.Address;   parent : system.Address;   super : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorMethod (Self, swig_p_DOH.defined (n, False), swig_p_DOH.defined (parent, False), swig_p_DOH.defined (super, False)));
   end SwigDirector_Language_classDirectorMethod;



   function classDirectorMethod_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorMethod_is_overridden;


   function SwigDirector_Language_classDirectorMethod_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorMethod_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorMethod_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorDefaultConstructor (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorDefaultConstructor (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorDefaultConstructor;



   function classDirectorDefaultConstructor_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorDefaultConstructor_is_overridden;


   function SwigDirector_Language_classDirectorDefaultConstructor_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorDefaultConstructor_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorDefaultConstructor_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorConstructor (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorConstructor (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorConstructor;



   function classDirectorConstructor_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorConstructor_is_overridden;


   function SwigDirector_Language_classDirectorConstructor_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorConstructor_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorConstructor_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorEnd (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorEnd (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorEnd;



   function classDirectorEnd_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorEnd_is_overridden;


   function SwigDirector_Language_classDirectorEnd_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorEnd_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorEnd_is_overridden_dispatch;


   function SwigDirector_Language_classDirectorInit (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirectorInit (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirectorInit;



   function classDirectorInit_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirectorInit_is_overridden;


   function SwigDirector_Language_classDirectorInit_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirectorInit_is_overridden (Self.all);
   end SwigDirector_Language_classDirectorInit_is_overridden_dispatch;


   function SwigDirector_Language_classDirector (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDirector (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDirector;



   function classDirector_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDirector_is_overridden;


   function SwigDirector_Language_classDirector_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDirector_is_overridden (Self.all);
   end SwigDirector_Language_classDirector_is_overridden_dispatch;


   function SwigDirector_Language_nativeWrapper (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (nativeWrapper (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_nativeWrapper;



   function nativeWrapper_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end nativeWrapper_is_overridden;


   function SwigDirector_Language_nativeWrapper_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return nativeWrapper_is_overridden (Self.all);
   end SwigDirector_Language_nativeWrapper_is_overridden_dispatch;


   function SwigDirector_Language_functionWrapper (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (functionWrapper (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_functionWrapper;



   function functionWrapper_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end functionWrapper_is_overridden;


   function SwigDirector_Language_functionWrapper_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return functionWrapper_is_overridden (Self.all);
   end SwigDirector_Language_functionWrapper_is_overridden_dispatch;


   function SwigDirector_Language_variableWrapper (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (variableWrapper (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_variableWrapper;



   function variableWrapper_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end variableWrapper_is_overridden;


   function SwigDirector_Language_variableWrapper_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return variableWrapper_is_overridden (Self.all);
   end SwigDirector_Language_variableWrapper_is_overridden_dispatch;


   function SwigDirector_Language_constantWrapper (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (constantWrapper (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_constantWrapper;



   function constantWrapper_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end constantWrapper_is_overridden;


   function SwigDirector_Language_constantWrapper_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return constantWrapper_is_overridden (Self.all);
   end SwigDirector_Language_constantWrapper_is_overridden_dispatch;


   function SwigDirector_Language_typedefHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (typedefHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_typedefHandler;



   function typedefHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end typedefHandler_is_overridden;


   function SwigDirector_Language_typedefHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return typedefHandler_is_overridden (Self.all);
   end SwigDirector_Language_typedefHandler_is_overridden_dispatch;


   function SwigDirector_Language_classHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classHandler;



   function classHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classHandler_is_overridden;


   function SwigDirector_Language_classHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classHandler_is_overridden (Self.all);
   end SwigDirector_Language_classHandler_is_overridden_dispatch;


   function SwigDirector_Language_destructorHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (destructorHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_destructorHandler;



   function destructorHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end destructorHandler_is_overridden;


   function SwigDirector_Language_destructorHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return destructorHandler_is_overridden (Self.all);
   end SwigDirector_Language_destructorHandler_is_overridden_dispatch;


   function SwigDirector_Language_copyconstructorHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (copyconstructorHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_copyconstructorHandler;



   function copyconstructorHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end copyconstructorHandler_is_overridden;


   function SwigDirector_Language_copyconstructorHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return copyconstructorHandler_is_overridden (Self.all);
   end SwigDirector_Language_copyconstructorHandler_is_overridden_dispatch;


   function SwigDirector_Language_constructorHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (constructorHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_constructorHandler;



   function constructorHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end constructorHandler_is_overridden;


   function SwigDirector_Language_constructorHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return constructorHandler_is_overridden (Self.all);
   end SwigDirector_Language_constructorHandler_is_overridden_dispatch;


   function SwigDirector_Language_memberconstantHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (memberconstantHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_memberconstantHandler;



   function memberconstantHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end memberconstantHandler_is_overridden;


   function SwigDirector_Language_memberconstantHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return memberconstantHandler_is_overridden (Self.all);
   end SwigDirector_Language_memberconstantHandler_is_overridden_dispatch;


   function SwigDirector_Language_staticmembervariableHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (staticmembervariableHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_staticmembervariableHandler;



   function staticmembervariableHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end staticmembervariableHandler_is_overridden;


   function SwigDirector_Language_staticmembervariableHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return staticmembervariableHandler_is_overridden (Self.all);
   end SwigDirector_Language_staticmembervariableHandler_is_overridden_dispatch;


   function SwigDirector_Language_membervariableHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (membervariableHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_membervariableHandler;



   function membervariableHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end membervariableHandler_is_overridden;


   function SwigDirector_Language_membervariableHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return membervariableHandler_is_overridden (Self.all);
   end SwigDirector_Language_membervariableHandler_is_overridden_dispatch;


   function SwigDirector_Language_globalvariableHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (globalvariableHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_globalvariableHandler;



   function globalvariableHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end globalvariableHandler_is_overridden;


   function SwigDirector_Language_globalvariableHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return globalvariableHandler_is_overridden (Self.all);
   end SwigDirector_Language_globalvariableHandler_is_overridden_dispatch;


   function SwigDirector_Language_variableHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (variableHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_variableHandler;



   function variableHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end variableHandler_is_overridden;


   function SwigDirector_Language_variableHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return variableHandler_is_overridden (Self.all);
   end SwigDirector_Language_variableHandler_is_overridden_dispatch;


   function SwigDirector_Language_callbackfunctionHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (callbackfunctionHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_callbackfunctionHandler;



   function callbackfunctionHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end callbackfunctionHandler_is_overridden;


   function SwigDirector_Language_callbackfunctionHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return callbackfunctionHandler_is_overridden (Self.all);
   end SwigDirector_Language_callbackfunctionHandler_is_overridden_dispatch;


   function SwigDirector_Language_staticmemberfunctionHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (staticmemberfunctionHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_staticmemberfunctionHandler;



   function staticmemberfunctionHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end staticmemberfunctionHandler_is_overridden;


   function SwigDirector_Language_staticmemberfunctionHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return staticmemberfunctionHandler_is_overridden (Self.all);
   end SwigDirector_Language_staticmemberfunctionHandler_is_overridden_dispatch;


   function SwigDirector_Language_memberfunctionHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (memberfunctionHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_memberfunctionHandler;



   function memberfunctionHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end memberfunctionHandler_is_overridden;


   function SwigDirector_Language_memberfunctionHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return memberfunctionHandler_is_overridden (Self.all);
   end SwigDirector_Language_memberfunctionHandler_is_overridden_dispatch;


   function SwigDirector_Language_globalfunctionHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (globalfunctionHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_globalfunctionHandler;



   function globalfunctionHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end globalfunctionHandler_is_overridden;


   function SwigDirector_Language_globalfunctionHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return globalfunctionHandler_is_overridden (Self.all);
   end SwigDirector_Language_globalfunctionHandler_is_overridden_dispatch;


   function SwigDirector_Language_functionHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (functionHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_functionHandler;



   function functionHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end functionHandler_is_overridden;


   function SwigDirector_Language_functionHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return functionHandler_is_overridden (Self.all);
   end SwigDirector_Language_functionHandler_is_overridden_dispatch;


   function SwigDirector_Language_usingDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (usingDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_usingDeclaration;



   overriding function usingDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end usingDeclaration_is_overridden;


   function SwigDirector_Language_usingDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return usingDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_usingDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_namespaceDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (namespaceDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_namespaceDeclaration;



   overriding function namespaceDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end namespaceDeclaration_is_overridden;


   function SwigDirector_Language_namespaceDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return namespaceDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_namespaceDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_accessDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (accessDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_accessDeclaration;



   overriding function accessDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end accessDeclaration_is_overridden;


   function SwigDirector_Language_accessDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return accessDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_accessDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_destructorDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (destructorDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_destructorDeclaration;



   overriding function destructorDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end destructorDeclaration_is_overridden;


   function SwigDirector_Language_destructorDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return destructorDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_destructorDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_constructorDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (constructorDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_constructorDeclaration;



   overriding function constructorDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end constructorDeclaration_is_overridden;


   function SwigDirector_Language_constructorDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return constructorDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_constructorDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_classforwardDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classforwardDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classforwardDeclaration;



   overriding function classforwardDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classforwardDeclaration_is_overridden;


   function SwigDirector_Language_classforwardDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classforwardDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_classforwardDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_classDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (classDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_classDeclaration;



   overriding function classDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end classDeclaration_is_overridden;


   function SwigDirector_Language_classDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return classDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_classDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_enumforwardDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (enumforwardDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_enumforwardDeclaration;



   overriding function enumforwardDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end enumforwardDeclaration_is_overridden;


   function SwigDirector_Language_enumforwardDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return enumforwardDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_enumforwardDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_enumvalueDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (enumvalueDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_enumvalueDeclaration;



   overriding function enumvalueDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end enumvalueDeclaration_is_overridden;


   function SwigDirector_Language_enumvalueDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return enumvalueDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_enumvalueDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_enumDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (enumDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_enumDeclaration;



   overriding function enumDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end enumDeclaration_is_overridden;


   function SwigDirector_Language_enumDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return enumDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_enumDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_externDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (externDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_externDeclaration;



   overriding function externDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end externDeclaration_is_overridden;


   function SwigDirector_Language_externDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return externDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_externDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_cDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (cDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_cDeclaration;



   overriding function cDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end cDeclaration_is_overridden;


   function SwigDirector_Language_cDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return cDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_cDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_typesDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (typesDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_typesDirective;



   overriding function typesDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end typesDirective_is_overridden;


   function SwigDirector_Language_typesDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return typesDirective_is_overridden (Self.all);
   end SwigDirector_Language_typesDirective_is_overridden_dispatch;


   function SwigDirector_Language_typemapcopyDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (typemapcopyDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_typemapcopyDirective;



   overriding function typemapcopyDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end typemapcopyDirective_is_overridden;


   function SwigDirector_Language_typemapcopyDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return typemapcopyDirective_is_overridden (Self.all);
   end SwigDirector_Language_typemapcopyDirective_is_overridden_dispatch;


   function SwigDirector_Language_typemapDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (typemapDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_typemapDirective;



   overriding function typemapDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end typemapDirective_is_overridden;


   function SwigDirector_Language_typemapDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return typemapDirective_is_overridden (Self.all);
   end SwigDirector_Language_typemapDirective_is_overridden_dispatch;


   function SwigDirector_Language_pragmaDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (pragmaDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_pragmaDirective;



   overriding function pragmaDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end pragmaDirective_is_overridden;


   function SwigDirector_Language_pragmaDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return pragmaDirective_is_overridden (Self.all);
   end SwigDirector_Language_pragmaDirective_is_overridden_dispatch;


   function SwigDirector_Language_nativeDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (nativeDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_nativeDirective;



   overriding function nativeDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end nativeDirective_is_overridden;


   function SwigDirector_Language_nativeDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return nativeDirective_is_overridden (Self.all);
   end SwigDirector_Language_nativeDirective_is_overridden_dispatch;


   function SwigDirector_Language_moduleDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (moduleDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_moduleDirective;



   overriding function moduleDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end moduleDirective_is_overridden;


   function SwigDirector_Language_moduleDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return moduleDirective_is_overridden (Self.all);
   end SwigDirector_Language_moduleDirective_is_overridden_dispatch;


   function SwigDirector_Language_insertDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (insertDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_insertDirective;



   overriding function insertDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end insertDirective_is_overridden;


   function SwigDirector_Language_insertDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return insertDirective_is_overridden (Self.all);
   end SwigDirector_Language_insertDirective_is_overridden_dispatch;


   function SwigDirector_Language_includeDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (includeDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_includeDirective;



   overriding function includeDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end includeDirective_is_overridden;


   function SwigDirector_Language_includeDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return includeDirective_is_overridden (Self.all);
   end SwigDirector_Language_includeDirective_is_overridden_dispatch;


   function SwigDirector_Language_importDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (importDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_importDirective;



   overriding function importDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end importDirective_is_overridden;


   function SwigDirector_Language_importDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return importDirective_is_overridden (Self.all);
   end SwigDirector_Language_importDirective_is_overridden_dispatch;


   function SwigDirector_Language_fragmentDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (fragmentDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_fragmentDirective;



   overriding function fragmentDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end fragmentDirective_is_overridden;


   function SwigDirector_Language_fragmentDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return fragmentDirective_is_overridden (Self.all);
   end SwigDirector_Language_fragmentDirective_is_overridden_dispatch;


   function SwigDirector_Language_extendDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (extendDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_extendDirective;



   overriding function extendDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end extendDirective_is_overridden;


   function SwigDirector_Language_extendDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return extendDirective_is_overridden (Self.all);
   end SwigDirector_Language_extendDirective_is_overridden_dispatch;


   function SwigDirector_Language_constantDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (constantDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_constantDirective;



   overriding function constantDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end constantDirective_is_overridden;


   function SwigDirector_Language_constantDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return constantDirective_is_overridden (Self.all);
   end SwigDirector_Language_constantDirective_is_overridden_dispatch;


   function SwigDirector_Language_clearDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (clearDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_clearDirective;



   overriding function clearDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end clearDirective_is_overridden;


   function SwigDirector_Language_clearDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return clearDirective_is_overridden (Self.all);
   end SwigDirector_Language_clearDirective_is_overridden_dispatch;


   function SwigDirector_Language_applyDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (applyDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_applyDirective;



   overriding function applyDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end applyDirective_is_overridden;


   function SwigDirector_Language_applyDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return applyDirective_is_overridden (Self.all);
   end SwigDirector_Language_applyDirective_is_overridden_dispatch;


   function SwigDirector_Language_top (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (top (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_top;



   overriding function top_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end top_is_overridden;


   function SwigDirector_Language_top_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return top_is_overridden (Self.all);
   end SwigDirector_Language_top_is_overridden_dispatch;


   function SwigDirector_Language_defaultHandler (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (defaultHandler (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_defaultHandler;



   overriding function defaultHandler_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end defaultHandler_is_overridden;


   function SwigDirector_Language_defaultHandler_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return defaultHandler_is_overridden (Self.all);
   end SwigDirector_Language_defaultHandler_is_overridden_dispatch;


   function SwigDirector_Language_emit_children (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (emit_children (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_emit_children;



   overriding function emit_children_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end emit_children_is_overridden;


   function SwigDirector_Language_emit_children_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return emit_children_is_overridden (Self.all);
   end SwigDirector_Language_emit_children_is_overridden_dispatch;


   function SwigDirector_Language_typemapitemDirective (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (typemapitemDirective (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_typemapitemDirective;



   overriding function typemapitemDirective_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end typemapitemDirective_is_overridden;


   function SwigDirector_Language_typemapitemDirective_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return typemapitemDirective_is_overridden (Self.all);
   end SwigDirector_Language_typemapitemDirective_is_overridden_dispatch;


   function SwigDirector_Language_templateDeclaration (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (templateDeclaration (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_templateDeclaration;



   overriding function templateDeclaration_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end templateDeclaration_is_overridden;


   function SwigDirector_Language_templateDeclaration_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return templateDeclaration_is_overridden (Self.all);
   end SwigDirector_Language_templateDeclaration_is_overridden_dispatch;


   function SwigDirector_Language_emit_one (Self : access Item'class;   n : system.Address) return interfaces.c.Int
   is
   begin
      return interfaces.c.Int (emit_one (Self, swig_p_DOH.defined (n, False)));
   end SwigDirector_Language_emit_one;



   overriding function emit_one_is_overridden (Self : in Item) return Boolean
   is
      pragma Unreferenced (Self);
   begin
      return False;
   end emit_one_is_overridden;


   function SwigDirector_Language_emit_one_is_overridden_dispatch (Self : access Item'class) return Boolean
   is
   begin
      return emit_one_is_overridden (Self.all);
   end SwigDirector_Language_emit_one_is_overridden_dispatch;

   overriding procedure swig_Director_disconnect (Self : in out Item)
   is
   begin
      set_swigCMemOwn (Self, False);
      Dispose (Self);
   end swig_Director_disconnect;

   overriding procedure swig_release_Ownership (Self : in out Item)
   is
   begin
      set_swigCMemOwn (Self, False);
      swigg_c_import.Language_change_ownership (Self'Address, self.swigCPtr_Language, False);
   end swig_release_Ownership;

   overriding procedure swig_take_Ownership (Self : in out Item)
   is
   begin
      set_swigCMemOwn (Self, True);
      swigg_c_import.Language_change_ownership (Self'Address, self.swigCPtr_Language, True);
   end swig_take_Ownership;


   overriding procedure swig_Director_connect (Self : in out Item)
   is
   begin

      --  this($imcall, true);

      swigg_c_import.Language_director_connect (Self'Address, self.swigCPtr_Language, get_swigCMemOwn (Self), True);

   end swig_Director_connect;





   procedure dummy_procedure is begin null; end dummy_procedure;

end Language;
