--
-- This file was automatically generated by SWIG version 1.3.29
--(http://www.swig.org).
--
-- Do not make changes to this file. Modify the SWIG interface file instead.
--

with System;
with Ada.Unchecked_Conversion;
with Ada.Finalization;
with swig_p_DOH;                 use swig_p_DOH;

package Wrapper is

   type Item is new Ada.Finalization.Controlled with private;

   type View is access all Item'Class;

   procedure free (Self : in out View);

   function null_Wrapper return  Item'Class;

   function is_Null (Self : in Item) return Boolean;

   procedure set_localh (Self : in Item; localh : in swig_p_DOH.Item'Class);

   function get_localh (Self : in Item) return swig_p_DOH.Item'Class;

   procedure set_def (Self : in Item; def : in swig_p_DOH.Item'Class);

   function get_def (Self : in Item) return swig_p_DOH.Item'Class;

   procedure set_locals (Self : in Item; locals : in swig_p_DOH.Item'Class);

   function get_locals (Self : in Item) return swig_p_DOH.Item'Class;

   procedure set_code (Self : in Item; code : in swig_p_DOH.Item'Class);

   function get_code (Self : in Item) return swig_p_DOH.Item'Class;

   overriding procedure initialize (Self : in out Item);

   function construct return  Wrapper.Item'Class;

   -- Swig support
   --

   procedure is_Construct (Self : in out Item);
   --
   -- Flags 'self' as a newly constructed object to prevent auto-destruction
   -- during return from a user-defined construction function.
   procedure define
     (Self       : out Item;
      cPtr       : in System.Address;
      cMemoryOwn : in Boolean);

   function defined
     (cPtr       : in System.Address;
      cMemoryOwn : in Boolean := True)
      return       Item'Class;

   function getCPtr (Self : in Item) return System.Address;

   procedure set_swigCMemOwn (Self : out Item; Now : in Boolean);

   function get_swigCMemOwn (Self : in Item) return Boolean;

   procedure set_construction_Depth (Self : out Item; Now : in Integer);

   function get_construction_Depth (Self : in Item) return Integer;

   procedure add_Reference (Self : in out Item);

   procedure rid_Reference (Self : in out Item);

   procedure destroy_reference_Count (Self : in out Item);

   function get_reference_Count (Self : in Item) return Natural;
   procedure dispose (Self : in out Item);

private

   type Natural_view is access all Natural;
   type Item is new Ada.Finalization.Controlled with record
      swigCPtr_Wrapper   : System.Address;
      swigCMemOwn        : Boolean;
      construction_Depth : Integer := 0;
      reference_Count    : Natural_view;
   end record;

   overriding procedure finalize (Self : in out Item);

   overriding procedure adjust (Self : in out Item);

   function new_Wrapper (cPtr : in System.Address) return Item'Class;

   pragma Export (C, new_Wrapper, "SWIG_Ada_new_Wrapper");

   procedure dummy_procedure;       -- Hack to make body legal, when no other
                                    --subprograms.

end Wrapper;
