-- This file is generated by SWIG. Please do *not* modify by hand.
--
with Interfaces.C;
with Interfaces.C.Strings;
with Swig;
with Interfaces.C;

package swigg is

   -- String
   --
   subtype String is Swig.opaque_structure;

   type String_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.String;

   -- DOH
   --
   subtype DOH is Swig.void;

   type DOH_array is array (Interfaces.C.size_t range <>) of aliased swigg.DOH;

   -- DohObjInfo
   --
   subtype DohObjInfo is Swig.opaque_structure;

   type DohObjInfo_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.DohObjInfo;

   -- Hash
   --
   subtype Hash is swigg.DOH;

   type Hash_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.Hash;

   -- List
   --
   subtype List is swigg.DOH;

   type List_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.List;

   -- String_or_char
   --
   subtype String_or_char is swigg.DOH;

   type String_or_char_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.String_or_char;

   -- File
   --
   subtype File is swigg.DOH;

   type File_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.File;

   -- Parm
   --
   subtype Parm is swigg.DOH;

   type Parm_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.Parm;

   -- ParmList
   --
   subtype ParmList is swigg.DOH;

   type ParmList_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.ParmList;

   -- Node
   --
   subtype Node is swigg.DOH;

   type Node_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.Node;

   -- Symtab
   --
   subtype Symtab is swigg.DOH;

   type Symtab_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.Symtab;

   -- Typetab
   --
   subtype Typetab is swigg.DOH;

   type Typetab_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.Typetab;

   -- SwigType
   --
   subtype SwigType is swigg.DOH;

   type SwigType_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.SwigType;

   -- ErrorMessageFormat
   --
   type ErrorMessageFormat is (EMF_STANDARD, EMF_MICROSOFT);

   for ErrorMessageFormat use (EMF_STANDARD => 0, EMF_MICROSOFT => 1);

   pragma Convention (C, ErrorMessageFormat);

   type ErrorMessageFormat_array is
     array (Interfaces.C.size_t range <>) of aliased swigg.ErrorMessageFormat;

   DOH_MAJOR_VERSION    : constant                                        := 0;
   DOH_MINOR_VERSION    : constant                                        := 1;
   DOH_BEGIN            : constant := -1;
   DOH_END              : constant := -2;
   DOH_CUR              : constant := -3;
   DOH_CURRENT          : constant := -3;
   DOH_REPLACE_ANY      : constant := 16#1#;
   DOH_REPLACE_NOQUOTE  : constant := 16#2#;
   DOH_REPLACE_ID       : constant := 16#4#;
   DOH_REPLACE_FIRST    : constant := 16#8#;
   DOH_REPLACE_ID_BEGIN : constant := 16#10#;
   DOH_REPLACE_ID_END   : constant := 16#20#;
   HAVE_BOOL            : constant                                        := 1;
   HAVE_INTTYPES_H      : constant                                        := 1;
   HAVE_LIBDL           : constant                                        := 1;
   HAVE_MEMORY_H        : constant                                        := 1;
   HAVE_POPEN           : constant                                        := 1;
   HAVE_STDINT_H        : constant                                        := 1;
   HAVE_STDLIB_H        : constant                                        := 1;
   HAVE_STRINGS_H       : constant                                        := 1;
   HAVE_STRING_H        : constant                                        := 1;
   HAVE_SYS_STAT_H      : constant                                        := 1;
   HAVE_SYS_TYPES_H     : constant                                        := 1;
   HAVE_UNISTD_H        : constant                                        := 1;
   the_PACKAGE          : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("swig");
   PACKAGE_BUGREPORT : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("http://www.swig.org");
   PACKAGE_NAME : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("swig");
   PACKAGE_STRING : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("swig 1.3.36");
   PACKAGE_TARNAME : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("swig");
   PACKAGE_VERSION : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("1.3.36");
   STDC_HEADERS : constant                                        := 1;
   SWIG_CXX     : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("g++");
   SWIG_LIB : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("/usr/local/share/swig/1.3.36");
   SWIG_LIB_WIN_UNIX : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("\0");
   SWIG_PLATFORM : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("x86_64-unknown-linux-gnu");
   VERSION : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("1.3.36");
   SWIG_LANG : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("-tcl");
   WARN_NONE                               : constant := 0;
   WARN_DEPRECATED_EXTERN                  : constant := 101;
   WARN_DEPRECATED_VAL                     : constant := 102;
   WARN_DEPRECATED_OUT                     : constant := 103;
   WARN_DEPRECATED_DISABLEDOC              : constant := 104;
   WARN_DEPRECATED_ENABLEDOC               : constant := 105;
   WARN_DEPRECATED_DOCONLY                 : constant := 106;
   WARN_DEPRECATED_STYLE                   : constant := 107;
   WARN_DEPRECATED_LOCALSTYLE              : constant := 108;
   WARN_DEPRECATED_TITLE                   : constant := 109;
   WARN_DEPRECATED_SECTION                 : constant := 110;
   WARN_DEPRECATED_SUBSECTION              : constant := 111;
   WARN_DEPRECATED_SUBSUBSECTION           : constant := 112;
   WARN_DEPRECATED_ADDMETHODS              : constant := 113;
   WARN_DEPRECATED_READONLY                : constant := 114;
   WARN_DEPRECATED_READWRITE               : constant := 115;
   WARN_DEPRECATED_EXCEPT                  : constant := 116;
   WARN_DEPRECATED_NEW                     : constant := 117;
   WARN_DEPRECATED_EXCEPT_TM               : constant := 118;
   WARN_DEPRECATED_IGNORE_TM               : constant := 119;
   WARN_DEPRECATED_OPTC                    : constant := 120;
   WARN_DEPRECATED_NAME                    : constant := 121;
   WARN_DEPRECATED_NOEXTERN                : constant := 122;
   WARN_DEPRECATED_NODEFAULT               : constant := 123;
   WARN_DEPRECATED_TYPEMAP_LANG            : constant := 124;
   WARN_PP_MISSING_FILE                    : constant := 201;
   WARN_PP_EVALUATION                      : constant := 202;
   WARN_PP_INCLUDEALL_IMPORTALL            : constant := 203;
   WARN_PP_CPP_WARNING                     : constant := 204;
   WARN_PP_CPP_ERROR                       : constant := 205;
   WARN_PARSE_CLASS_KEYWORD                : constant := 301;
   WARN_PARSE_REDEFINED                    : constant := 302;
   WARN_PARSE_EXTEND_UNDEF                 : constant := 303;
   WARN_PARSE_UNSUPPORTED_VALUE            : constant := 304;
   WARN_PARSE_BAD_VALUE                    : constant := 305;
   WARN_PARSE_PRIVATE                      : constant := 306;
   WARN_PARSE_BAD_DEFAULT                  : constant := 307;
   WARN_PARSE_NAMESPACE_ALIAS              : constant := 308;
   WARN_PARSE_PRIVATE_INHERIT              : constant := 309;
   WARN_PARSE_TEMPLATE_REPEAT              : constant := 310;
   WARN_PARSE_TEMPLATE_PARTIAL             : constant := 311;
   WARN_PARSE_NESTED_CLASS                 : constant := 312;
   WARN_PARSE_UNDEFINED_EXTERN             : constant := 313;
   WARN_PARSE_KEYWORD                      : constant := 314;
   WARN_PARSE_USING_UNDEF                  : constant := 315;
   WARN_PARSE_MODULE_REPEAT                : constant := 316;
   WARN_PARSE_TEMPLATE_SP_UNDEF            : constant := 317;
   WARN_PARSE_TEMPLATE_AMBIG               : constant := 318;
   WARN_PARSE_NO_ACCESS                    : constant := 319;
   WARN_PARSE_EXPLICIT_TEMPLATE            : constant := 320;
   WARN_PARSE_BUILTIN_NAME                 : constant := 321;
   WARN_PARSE_REDUNDANT                    : constant := 322;
   WARN_PARSE_REC_INHERITANCE              : constant := 323;
   WARN_IGNORE_OPERATOR_NEW                : constant := 350;
   WARN_IGNORE_OPERATOR_DELETE             : constant := 351;
   WARN_IGNORE_OPERATOR_PLUS               : constant := 352;
   WARN_IGNORE_OPERATOR_MINUS              : constant := 353;
   WARN_IGNORE_OPERATOR_MUL                : constant := 354;
   WARN_IGNORE_OPERATOR_DIV                : constant := 355;
   WARN_IGNORE_OPERATOR_MOD                : constant := 356;
   WARN_IGNORE_OPERATOR_XOR                : constant := 357;
   WARN_IGNORE_OPERATOR_AND                : constant := 358;
   WARN_IGNORE_OPERATOR_OR                 : constant := 359;
   WARN_IGNORE_OPERATOR_NOT                : constant := 360;
   WARN_IGNORE_OPERATOR_LNOT               : constant := 361;
   WARN_IGNORE_OPERATOR_EQ                 : constant := 362;
   WARN_IGNORE_OPERATOR_LT                 : constant := 363;
   WARN_IGNORE_OPERATOR_GT                 : constant := 364;
   WARN_IGNORE_OPERATOR_PLUSEQ             : constant := 365;
   WARN_IGNORE_OPERATOR_MINUSEQ            : constant := 366;
   WARN_IGNORE_OPERATOR_MULEQ              : constant := 367;
   WARN_IGNORE_OPERATOR_DIVEQ              : constant := 368;
   WARN_IGNORE_OPERATOR_MODEQ              : constant := 369;
   WARN_IGNORE_OPERATOR_XOREQ              : constant := 370;
   WARN_IGNORE_OPERATOR_ANDEQ              : constant := 371;
   WARN_IGNORE_OPERATOR_OREQ               : constant := 372;
   WARN_IGNORE_OPERATOR_LSHIFT             : constant := 373;
   WARN_IGNORE_OPERATOR_RSHIFT             : constant := 374;
   WARN_IGNORE_OPERATOR_LSHIFTEQ           : constant := 375;
   WARN_IGNORE_OPERATOR_RSHIFTEQ           : constant := 376;
   WARN_IGNORE_OPERATOR_EQUALTO            : constant := 377;
   WARN_IGNORE_OPERATOR_NOTEQUAL           : constant := 378;
   WARN_IGNORE_OPERATOR_LTEQUAL            : constant := 379;
   WARN_IGNORE_OPERATOR_GTEQUAL            : constant := 380;
   WARN_IGNORE_OPERATOR_LAND               : constant := 381;
   WARN_IGNORE_OPERATOR_LOR                : constant := 382;
   WARN_IGNORE_OPERATOR_PLUSPLUS           : constant := 383;
   WARN_IGNORE_OPERATOR_MINUSMINUS         : constant := 384;
   WARN_IGNORE_OPERATOR_COMMA              : constant := 385;
   WARN_IGNORE_OPERATOR_ARROWSTAR          : constant := 386;
   WARN_IGNORE_OPERATOR_ARROW              : constant := 387;
   WARN_IGNORE_OPERATOR_CALL               : constant := 388;
   WARN_IGNORE_OPERATOR_INDEX              : constant := 389;
   WARN_IGNORE_OPERATOR_UPLUS              : constant := 390;
   WARN_IGNORE_OPERATOR_UMINUS             : constant := 391;
   WARN_IGNORE_OPERATOR_UMUL               : constant := 392;
   WARN_IGNORE_OPERATOR_UAND               : constant := 393;
   WARN_IGNORE_OPERATOR_NEWARR             : constant := 394;
   WARN_IGNORE_OPERATOR_DELARR             : constant := 395;
   WARN_IGNORE_OPERATOR_REF                : constant := 396;
   WARN_TYPE_UNDEFINED_CLASS               : constant := 401;
   WARN_TYPE_INCOMPLETE                    : constant := 402;
   WARN_TYPE_ABSTRACT                      : constant := 403;
   WARN_TYPE_REDEFINED                     : constant := 404;
   WARN_TYPEMAP_SOURCETARGET               : constant := 450;
   WARN_TYPEMAP_CHARLEAK                   : constant := 451;
   WARN_TYPEMAP_SWIGTYPE                   : constant := 452;
   WARN_TYPEMAP_APPLY_UNDEF                : constant := 453;
   WARN_TYPEMAP_SWIGTYPELEAK               : constant := 454;
   WARN_TYPEMAP_IN_UNDEF                   : constant := 460;
   WARN_TYPEMAP_OUT_UNDEF                  : constant := 461;
   WARN_TYPEMAP_VARIN_UNDEF                : constant := 462;
   WARN_TYPEMAP_VAROUT_UNDEF               : constant := 463;
   WARN_TYPEMAP_CONST_UNDEF                : constant := 464;
   WARN_TYPEMAP_UNDEF                      : constant := 465;
   WARN_TYPEMAP_VAR_UNDEF                  : constant := 466;
   WARN_TYPEMAP_TYPECHECK                  : constant := 467;
   WARN_TYPEMAP_THROW                      : constant := 468;
   WARN_TYPEMAP_DIRECTORIN_UNDEF           : constant := 469;
   WARN_TYPEMAP_THREAD_UNSAFE              : constant := 470;
   WARN_TYPEMAP_DIRECTOROUT_UNDEF          : constant := 471;
   WARN_TYPEMAP_TYPECHECK_UNDEF            : constant := 472;
   WARN_TYPEMAP_DIRECTOROUT_PTR            : constant := 473;
   WARN_TYPEMAP_OUT_OPTIMAL_IGNORED        : constant := 474;
   WARN_TYPEMAP_OUT_OPTIMAL_MULTIPLE       : constant := 475;
   WARN_FRAGMENT_NOT_FOUND                 : constant := 490;
   WARN_LANG_OVERLOAD_DECL                 : constant := 501;
   WARN_LANG_OVERLOAD_CONSTRUCT            : constant := 502;
   WARN_LANG_IDENTIFIER                    : constant := 503;
   WARN_LANG_RETURN_TYPE                   : constant := 504;
   WARN_LANG_VARARGS                       : constant := 505;
   WARN_LANG_VARARGS_KEYWORD               : constant := 506;
   WARN_LANG_NATIVE_UNIMPL                 : constant := 507;
   WARN_LANG_DEREF_SHADOW                  : constant := 508;
   WARN_LANG_OVERLOAD_SHADOW               : constant := 509;
   WARN_LANG_FRIEND_IGNORE                 : constant := 510;
   WARN_LANG_OVERLOAD_KEYWORD              : constant := 511;
   WARN_LANG_OVERLOAD_CONST                : constant := 512;
   WARN_LANG_CLASS_UNNAMED                 : constant := 513;
   WARN_LANG_DIRECTOR_VDESTRUCT            : constant := 514;
   WARN_LANG_DISCARD_CONST                 : constant := 515;
   WARN_LANG_OVERLOAD_IGNORED              : constant := 516;
   WARN_LANG_DIRECTOR_ABSTRACT             : constant := 517;
   WARN_LANG_PORTABILITY_FILENAME          : constant := 518;
   WARN_LANG_TEMPLATE_METHOD_IGNORE        : constant := 519;
   WARN_RUBY_WRONG_NAME                    : constant := 801;
   WARN_RUBY_MULTIPLE_INHERITANCE          : constant := 802;
   WARN_JAVA_TYPEMAP_JNI_UNDEF             : constant := 810;
   WARN_JAVA_TYPEMAP_JTYPE_UNDEF           : constant := 811;
   WARN_JAVA_TYPEMAP_JSTYPE_UNDEF          : constant := 812;
   WARN_JAVA_MULTIPLE_INHERITANCE          : constant := 813;
   WARN_JAVA_TYPEMAP_GETCPTR_UNDEF         : constant := 814;
   WARN_JAVA_TYPEMAP_CLASSMOD_UNDEF        : constant := 815;
   WARN_JAVA_TYPEMAP_JAVABODY_UNDEF        : constant := 816;
   WARN_JAVA_TYPEMAP_JAVAOUT_UNDEF         : constant := 817;
   WARN_JAVA_TYPEMAP_JAVAIN_UNDEF          : constant := 818;
   WARN_JAVA_TYPEMAP_JAVADIRECTORIN_UNDEF  : constant := 819;
   WARN_JAVA_TYPEMAP_JAVADIRECTOROUT_UNDEF : constant := 820;
   WARN_JAVA_COVARIANT_RET                 : constant := 822;
   WARN_JAVA_TYPEMAP_JAVACONSTRUCT_UNDEF   : constant := 823;
   WARN_JAVA_TYPEMAP_DIRECTORIN_NODESC     : constant := 824;
   WARN_JAVA_NO_DIRECTORCONNECT_ATTR       : constant := 825;
   WARN_CSHARP_TYPEMAP_CTYPE_UNDEF         : constant := 830;
   WARN_CSHARP_TYPEMAP_CSTYPE_UNDEF        : constant := 831;
   WARN_CSHARP_TYPEMAP_CSWTYPE_UNDEF       : constant := 832;
   WARN_CSHARP_MULTIPLE_INHERITANCE        : constant := 833;
   WARN_CSHARP_TYPEMAP_GETCPTR_UNDEF       : constant := 834;
   WARN_CSHARP_TYPEMAP_CLASSMOD_UNDEF      : constant := 835;
   WARN_CSHARP_TYPEMAP_CSBODY_UNDEF        : constant := 836;
   WARN_CSHARP_TYPEMAP_CSOUT_UNDEF         : constant := 837;
   WARN_CSHARP_TYPEMAP_CSIN_UNDEF          : constant := 838;
   WARN_CSHARP_TYPEMAP_CSDIRECTORIN_UNDEF  : constant := 839;
   WARN_CSHARP_TYPEMAP_CSDIRECTOROUT_UNDEF : constant := 840;
   WARN_CSHARP_COVARIANT_RET               : constant := 842;
   WARN_CSHARP_TYPEMAP_CSCONSTRUCT_UNDEF   : constant := 843;
   WARN_CSHARP_EXCODE                      : constant := 844;
   WARN_CSHARP_CANTHROW                    : constant := 845;
   WARN_CSHARP_NO_DIRECTORCONNECT_ATTR     : constant := 846;
   WARN_MODULA3_TYPEMAP_TYPE_UNDEF         : constant := 850;
   WARN_MODULA3_TYPEMAP_GETCPTR_UNDEF      : constant := 851;
   WARN_MODULA3_TYPEMAP_CLASSMOD_UNDEF     : constant := 852;
   WARN_MODULA3_TYPEMAP_PTRCONSTMOD_UNDEF  : constant := 853;
   WARN_MODULA3_TYPEMAP_MULTIPLE_RETURN    : constant := 854;
   WARN_MODULA3_MULTIPLE_INHERITANCE       : constant := 855;
   WARN_MODULA3_TYPECONSTRUCTOR_UNKNOWN    : constant := 856;
   WARN_MODULA3_UNKNOWN_PRAGMA             : constant := 857;
   WARN_MODULA3_BAD_ENUMERATION            : constant := 858;
   WARN_MODULA3_DOUBLE_ID                  : constant := 859;
   WARN_MODULA3_BAD_IMPORT                 : constant := 860;
   WARN_PHP4_MULTIPLE_INHERITANCE          : constant := 870;
   WARN_PHP4_UNKNOWN_PRAGMA                : constant := 871;
   SWIG_OK                                 : constant := 1;
   SWIG_ERROR                              : constant := 0;
   SWIG_NOWRAP                             : constant := 0;
   T_BOOL                                  : constant := 1;
   T_SCHAR                                 : constant := 2;
   T_UCHAR                                 : constant := 3;
   T_SHORT                                 : constant := 4;
   T_USHORT                                : constant := 5;
   T_ENUM                                  : constant := 6;
   T_INT                                   : constant := 7;
   T_UINT                                  : constant := 8;
   T_LONG                                  : constant := 9;
   T_ULONG                                 : constant := 10;
   T_LONGLONG                              : constant := 11;
   T_ULONGLONG                             : constant := 12;
   T_FLOAT                                 : constant := 20;
   T_DOUBLE                                : constant := 21;
   T_LONGDOUBLE                            : constant := 22;
   T_FLTCPLX                               : constant := 23;
   T_DBLCPLX                               : constant := 24;
   T_NUMERIC                               : constant := 25;
   T_COMPLEX                               : constant := 24;
   T_CHAR                                  : constant := 29;
   T_WCHAR                                 : constant := 30;
   T_USER                                  : constant := 31;
   T_VOID                                  : constant := 32;
   T_STRING                                : constant := 33;
   T_POINTER                               : constant := 34;
   T_REFERENCE                             : constant := 35;
   T_ARRAY                                 : constant := 36;
   T_FUNCTION                              : constant := 37;
   T_MPOINTER                              : constant := 38;
   T_VARARGS                               : constant := 39;
   T_SYMBOL                                : constant := 98;
   T_ERROR                                 : constant := 99;
   CWRAP_EXTEND                            : constant := 16#1#;
   CWRAP_SMART_POINTER                     : constant := 16#2#;
   CWRAP_NATURAL_VAR                       : constant := 16#4#;
   CWRAP_DIRECTOR_ONE_CALL                 : constant := 16#8#;
   CWRAP_DIRECTOR_TWO_CALLS                : constant := 16#10#;
   CWRAP_ALL_PROTECTED_ACCESS              : constant := 16#20#;
   NOT_VIRTUAL                             : constant := 0;
   PLAIN_VIRTUAL                           : constant := 1;
   PURE_VIRTUAL                            : constant := 2;
   input_file : aliased Interfaces.C.Strings.chars_ptr;
   line_number                             : aliased Interfaces.C.int;
   CPlusPlus                               : aliased Interfaces.C.int;
   Extend                                  : aliased Interfaces.C.int;
   Verbose                                 : aliased Interfaces.C.int;
   IsVirtual                               : aliased Interfaces.C.int;
   ImportMode                              : aliased Interfaces.C.int;
   NoExcept                                : aliased Interfaces.C.int;
   the_Abstract                            : aliased Interfaces.C.int;
   SmartPointer                            : aliased Interfaces.C.int;
   SwigRuntime                             : aliased Interfaces.C.int;
   tab2 : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("  ");
   tab4 : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("    ");
   tab8 : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("        ");
   SWIG_FILE_DELIMITER : aliased constant Interfaces.C.Strings.chars_ptr :=
     Interfaces.C.Strings.New_String ("/");

private

   pragma Import (Cpp, input_file, "_ZN5swigg10input_fileE");
   pragma Import (Cpp, line_number, "_ZN5swigg11line_numberE");
   pragma Import (Cpp, CPlusPlus, "_ZN5swigg9CPlusPlusE");
   pragma Import (Cpp, Extend, "_ZN5swigg6ExtendE");
   pragma Import (Cpp, Verbose, "_ZN5swigg7VerboseE");
   pragma Import (Cpp, IsVirtual, "_ZN5swigg9IsVirtualE");
   pragma Import (Cpp, ImportMode, "_ZN5swigg10ImportModeE");
   pragma Import (Cpp, NoExcept, "_ZN5swigg8NoExceptE");
   pragma Import (Cpp, the_Abstract, "_ZN5swigg12the_AbstractE");
   pragma Import (Cpp, SmartPointer, "_ZN5swigg12SmartPointerE");
   pragma Import (Cpp, SwigRuntime, "_ZN5swigg11SwigRuntimeE");

end swigg;
