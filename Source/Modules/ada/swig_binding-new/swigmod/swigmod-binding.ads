-- This file is generated by SWIG. Please do *not* modify by hand.
--
with interfaces.c;
with interfaces.c.strings;
with swig.pointers;
with swigg_module.Pointers;
with swigg_module.Wrapper;
with swigmod.Language;
with interfaces.C;

package swigmod.Binding is

   function Lang_CurrentClass return swigg_module.Pointers.Node_Pointer;

   function Lang_ClassName return swigg_module.Pointers.String_Pointer;

   function Lang_AddExtern return interfaces.c.int;

   function Lang_ForceExtern return interfaces.c.int;

   function Lang_first_nontemplate
     (n : in swigg_module.Pointers.Node_Pointer) return swigg_module.Pointers
     .Node_Pointer;

   function SWIG_main (arg_3_1 : in interfaces.c.int;
      arg_3_2                  : in swig.pointers.chars_ptr_Pointer;
      arg_3_3 : in swigmod.Language.Pointer) return interfaces.c.int;

   procedure emit_parameter_variables
     (l : in swigg_module.Pointers.ParmList_Pointer;
      f : in swigg_module.Wrapper.Pointer);

   procedure emit_return_variable (n : in swigg_module.Pointers.Node_Pointer;
      rt : in swigg_module.Pointers.SwigType_Pointer;
      f                              : in swigg_module.Wrapper.Pointer);

   procedure SWIG_exit (arg_1 : in interfaces.c.int);

   procedure SWIG_config_file
     (arg_1 : in swigg_module.Pointers.String_or_char_Pointer);

   function SWIG_output_directory return swigg_module.Pointers.String_Pointer;

   procedure SWIG_config_cppext (ext : in interfaces.c.strings.chars_ptr);

   procedure SWIG_library_directory
     (arg_1 : in interfaces.c.strings.chars_ptr);

   function emit_num_arguments
     (arg_1 : in swigg_module.Pointers.ParmList_Pointer) return interfaces.c
     .int;

   function emit_num_required
     (arg_1 : in swigg_module.Pointers.ParmList_Pointer) return interfaces.c
     .int;

   function emit_isvarargs
     (arg_1 : in swigg_module.Pointers.ParmList_Pointer) return interfaces.c
     .int;

   procedure emit_attach_parmmaps
     (arg_1 : in swigg_module.Pointers.ParmList_Pointer;
      f     : in swigg_module.Wrapper.Pointer);

   procedure emit_mark_varargs (l : in swigg_module.Pointers.ParmList_Pointer);

   function emit_action
     (n : in swigg_module.Pointers.Node_Pointer) return swigg_module.Pointers
     .String_Pointer;

   function emit_action_code (n : in swigg_module.Pointers.Node_Pointer;
      wrappercode               : in swigg_module.Pointers.String_Pointer;
      action : in swigg_module.Pointers.String_Pointer) return interfaces.c
     .int;

   procedure Swig_overload_check (n : in swigg_module.Pointers.Node_Pointer);

   function Swig_overload_dispatch (n : in swigg_module.Pointers.Node_Pointer;
      fmt : in swigg_module.Pointers.String_or_char_Pointer;
      arg_1 : in swig.pointers.int_Pointer) return swigg_module.Pointers
     .String_Pointer;

   function Swig_overload_dispatch_cast
     (n     : in swigg_module.Pointers.Node_Pointer;
      fmt   : in swigg_module.Pointers.String_or_char_Pointer;
      arg_1 : in swig.pointers.int_Pointer) return swigg_module.Pointers
     .String_Pointer;

   function Swig_overload_dispatch_fast
     (n     : in swigg_module.Pointers.Node_Pointer;
      fmt   : in swigg_module.Pointers.String_or_char_Pointer;
      arg_1 : in swig.pointers.int_Pointer) return swigg_module.Pointers
     .String_Pointer;

   function cplus_value_type
     (t : in swigg_module.Pointers.SwigType_Pointer)
      return swigg_module.Pointers.SwigType_Pointer;

   function Swig_csuperclass_call
     (base   : in swigg_module.Pointers.String_Pointer;
      method : in swigg_module.Pointers.String_Pointer;
      l      : in swigg_module.Pointers.ParmList_Pointer)
      return swigg_module.Pointers.String_Pointer;

   function Swig_class_declaration (n : in swigg_module.Pointers.Node_Pointer;
      name : in swigg_module.Pointers.String_Pointer)
      return swigg_module.Pointers.String_Pointer;

   function Swig_class_name
     (n : in swigg_module.Pointers.Node_Pointer) return swigg_module.Pointers
     .String_Pointer;

   function Swig_method_call
     (name  : in swigg_module.Pointers.String_or_char_Pointer;
      parms : in swigg_module.Pointers.ParmList_Pointer)
      return swigg_module.Pointers.String_Pointer;

   function Swig_method_decl
     (rtype  : in swigg_module.Pointers.SwigType_Pointer;
      decl   : in swigg_module.Pointers.SwigType_Pointer;
      id     : in swigg_module.Pointers.String_or_char_Pointer;
      args   : in swigg_module.Pointers.List_Pointer;
      strip  : in interfaces.c.int;
      values : in interfaces.c.int) return swigg_module.Pointers
     .String_Pointer;

   function Swig_director_declaration
     (n : in swigg_module.Pointers.Node_Pointer) return swigg_module.Pointers
     .String_Pointer;

   procedure Swig_director_emit_dynamic_cast
     (n : in swigg_module.Pointers.Node_Pointer;
      f : in swigg_module.Wrapper.Pointer);

   procedure SWIG_typemap_lang (arg_1 : in interfaces.c.strings.chars_ptr);

   function is_public
     (n : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_private
     (n : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_protected
     (n : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_member_director
     (parentnode : in swigg_module.Pointers.Node_Pointer;
      member : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_member_director
     (member : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_non_virtual_protected_access
     (n : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function use_naturalvar_mode
     (n : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   procedure Wrapper_virtual_elimination_mode_set
     (arg_1 : in interfaces.c.int);

   procedure Wrapper_fast_dispatch_mode_set (arg_1 : in interfaces.c.int);

   procedure Wrapper_cast_dispatch_mode_set (arg_1 : in interfaces.c.int);

   procedure Wrapper_naturalvar_mode_set (arg_1 : in interfaces.c.int);

   procedure clean_overloaded (n : in swigg_module.Pointers.Node_Pointer);

   procedure Swig_contracts (n : in swigg_module.Pointers.Node_Pointer);

   procedure Swig_contract_mode_set (flag : in interfaces.c.int);

   function Swig_contract_mode_get return interfaces.c.int;

   procedure Swig_browser (n : in swigg_module.Pointers.Node_Pointer;
      arg_1                  : in interfaces.c.int);

   procedure Swig_default_allocators
     (n : in swigg_module.Pointers.Node_Pointer);

   procedure Swig_process_types (n : in swigg_module.Pointers.Node_Pointer);

   procedure exit_with_Fail;

   procedure do_base_top (Self : in swigmod.Language.Pointer;
      node                     : in swigg_module.Pointers.Node_Pointer);

private

   pragma Import (C, Lang_CurrentClass, "Ada_Lang_CurrentClass");
   pragma Import (C, Lang_ClassName, "Ada_Lang_ClassName");
   pragma Import (C, Lang_AddExtern, "Ada_Lang_AddExtern");
   pragma Import (C, Lang_ForceExtern, "Ada_Lang_ForceExtern");
   pragma Import (C, Lang_first_nontemplate, "Ada_Lang_first_nontemplate");
   pragma Import (C, SWIG_main, "Ada_SWIG_main");
   pragma Import (C, emit_parameter_variables, "Ada_emit_parameter_variables");
   pragma Import (C, emit_return_variable, "Ada_emit_return_variable");
   pragma Import (C, SWIG_exit, "Ada_SWIG_exit");
   pragma Import (C, SWIG_config_file, "Ada_SWIG_config_file");
   pragma Import (C, SWIG_output_directory, "Ada_SWIG_output_directory");
   pragma Import (C, SWIG_config_cppext, "Ada_SWIG_config_cppext");
   pragma Import (C, SWIG_library_directory, "Ada_SWIG_library_directory");
   pragma Import (C, emit_num_arguments, "Ada_emit_num_arguments");
   pragma Import (C, emit_num_required, "Ada_emit_num_required");
   pragma Import (C, emit_isvarargs, "Ada_emit_isvarargs");
   pragma Import (C, emit_attach_parmmaps, "Ada_emit_attach_parmmaps");
   pragma Import (C, emit_mark_varargs, "Ada_emit_mark_varargs");
   pragma Import (C, emit_action, "Ada_emit_action");
   pragma Import (C, emit_action_code, "Ada_emit_action_code");
   pragma Import (C, Swig_overload_check, "Ada_Swig_overload_check");
   pragma Import (C, Swig_overload_dispatch, "Ada_Swig_overload_dispatch");
   pragma Import (C, Swig_overload_dispatch_cast,
      "Ada_Swig_overload_dispatch_cast");
   pragma Import (C, Swig_overload_dispatch_fast,
      "Ada_Swig_overload_dispatch_fast");
   pragma Import (C, cplus_value_type, "Ada_cplus_value_type");
   pragma Import (C, Swig_csuperclass_call, "Ada_Swig_csuperclass_call");
   pragma Import (C, Swig_class_declaration, "Ada_Swig_class_declaration");
   pragma Import (C, Swig_class_name, "Ada_Swig_class_name");
   pragma Import (C, Swig_method_call, "Ada_Swig_method_call");
   pragma Import (C, Swig_method_decl, "Ada_Swig_method_decl");
   pragma Import (C, Swig_director_declaration,
      "Ada_Swig_director_declaration");
   pragma Import (C, Swig_director_emit_dynamic_cast,
      "Ada_Swig_director_emit_dynamic_cast");
   pragma Import (C, SWIG_typemap_lang, "Ada_SWIG_typemap_lang");
   pragma Import (C, is_public, "Ada_is_public");
   pragma Import (C, is_private, "Ada_is_private");
   pragma Import (C, is_protected, "Ada_is_protected");

   function is_member_director_v1
     (parentnode : in swigg_module.Pointers.Node_Pointer;
      member : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_member_director
     (parentnode : in swigg_module.Pointers.Node_Pointer;
      member     : in swigg_module.Pointers.Node_Pointer) return interfaces.c
     .int renames
     is_member_director_v1;

   pragma Import (C, is_member_director_v1, "Ada_is_member_director__SWIG_0");

   function is_member_director_v2
     (member : in swigg_module.Pointers.Node_Pointer) return interfaces.c.int;

   function is_member_director
     (member : in swigg_module.Pointers.Node_Pointer) return interfaces.c
     .int renames
     is_member_director_v2;

   pragma Import (C, is_member_director_v2, "Ada_is_member_director__SWIG_1");
   pragma Import (C, is_non_virtual_protected_access,
      "Ada_is_non_virtual_protected_access");
   pragma Import (C, use_naturalvar_mode, "Ada_use_naturalvar_mode");
   pragma Import (C, Wrapper_virtual_elimination_mode_set,
      "Ada_Wrapper_virtual_elimination_mode_set");
   pragma Import (C, Wrapper_fast_dispatch_mode_set,
      "Ada_Wrapper_fast_dispatch_mode_set");
   pragma Import (C, Wrapper_cast_dispatch_mode_set,
      "Ada_Wrapper_cast_dispatch_mode_set");
   pragma Import (C, Wrapper_naturalvar_mode_set,
      "Ada_Wrapper_naturalvar_mode_set");
   pragma Import (C, clean_overloaded, "Ada_clean_overloaded");
   pragma Import (C, Swig_contracts, "Ada_Swig_contracts");
   pragma Import (C, Swig_contract_mode_set, "Ada_Swig_contract_mode_set");
   pragma Import (C, Swig_contract_mode_get, "Ada_Swig_contract_mode_get");
   pragma Import (C, Swig_browser, "Ada_Swig_browser");
   pragma Import (C, Swig_default_allocators, "Ada_Swig_default_allocators");
   pragma Import (C, Swig_process_types, "Ada_Swig_process_types");
   pragma Import (C, exit_with_Fail, "Ada_exit_with_Fail");
   pragma Import (C, do_base_top, "Ada_do_base_top");

end swigmod.Binding;
